definitions:
  model.FossilGetResponse:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
      id_fossil:
        type: integer
      periods:
        items:
          $ref: '#/definitions/model.Period'
        type: array
      species:
        type: string
      status:
        type: string
    type: object
  model.FossilRequest:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      formation_date:
        type: string
      id_fossil:
        type: integer
      species:
        type: string
      status:
        type: string
    type: object
  model.FossilUpdateSpeciesRequest:
    properties:
      species:
        type: string
    type: object
  model.FossilUpdateStatusRequest:
    properties:
      status:
        type: string
    type: object
  model.Period:
    properties:
      age:
        type: string
      description:
        type: string
      id_period:
        type: integer
      name:
        type: string
      photo:
        type: string
      status:
        type: string
    type: object
  model.PeriodGetResponse:
    properties:
      id_fossil:
        example: 1
        type: integer
      periods:
        items:
          $ref: '#/definitions/model.Period'
        type: array
    type: object
  model.PeriodRequest:
    properties:
      age:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  model.Role:
    enum:
    - пользователь
    - модератор
    type: string
    x-enum-varnames:
    - UserRole
    - ModeratorRole
  model.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/model.Role'
      user_id:
        type: integer
    type: object
  model.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UserRegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /fossil:
    get:
      description: Возвращает список всех не удаленных ископаемых
      parameters:
      - description: Название вида
        format: email
        in: query
        name: searchSpecies
        type: string
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус ископаемого
        format: email
        in: query
        name: fossilStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список ископаемых
          schema:
            $ref: '#/definitions/model.FossilRequest'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FossilRequest'
      summary: Получение списка ископаемых
      tags:
      - Останки
  /fossil/{id}:
    get:
      description: Возвращает информацию об останке по её идентификатору
      parameters:
      - description: Идентификатор ископаемого
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация об останке
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
        "400":
          description: Недопустимый идентификатор ископаемого
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
      summary: Получение ископаемого по идентификатору
      tags:
      - Останки
  /fossil/{id}/delete:
    delete:
      description: Удаляет ископаемое по её идентификатору
      parameters:
      - description: Идентификатор ископаемого
        in: path
        name: id
        required: true
        type: integer
      - description: Название вида
        format: email
        in: query
        name: searchSpecies
        type: string
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус ископаемого
        format: email
        in: query
        name: fossilStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список периодов
          schema:
            $ref: '#/definitions/model.FossilRequest'
        "400":
          description: Недопустимый идентификатор ископаемого
          schema:
            $ref: '#/definitions/model.FossilRequest'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FossilRequest'
      summary: Удаление ископаемого
      tags:
      - Останки
  /fossil/{id}/status:
    put:
      description: Обновляет статус ископаемого для модератора по идентификатору ископаемого
      parameters:
      - description: Идентификатор ископаемого
        in: path
        name: id
        required: true
        type: integer
      - description: Новый статус ископаемого
        in: body
        name: fossilStatus
        required: true
        schema:
          $ref: '#/definitions/model.FossilUpdateStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Информация об останке
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
        "400":
          description: Недопустимый идентификатор ископаемого или ошибка чтения JSON
            объекта
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
      summary: Обновление статуса ископаемого для модератора
      tags:
      - Останки
  /fossil/{id}/update:
    put:
      description: Обновляет номер рейса для ископаемого по её идентификатору
      parameters:
      - description: Идентификатор ископаемого
        in: path
        name: id
        required: true
        type: integer
      - description: Новый вид ископаемого
        in: body
        name: species
        required: true
        schema:
          $ref: '#/definitions/model.FossilUpdateSpeciesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Информация об останке
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
        "400":
          description: Недопустимый идентификатор ископаемого или ошибка чтения JSON
            объекта
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
      summary: Обновление номера рейса ископаемого
      tags:
      - Останки
  /fossil/{id}/user:
    put:
      description: Обновляет статус ископаемого для пользователя по идентификатору
        ископаемого
      parameters:
      - description: Идентификатор ископаемого
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация об останке
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
        "400":
          description: Недопустимый идентификатор ископаемого
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FossilGetResponse'
      summary: Обновление статуса ископаемого для пользователя
      tags:
      - Останки
  /period:
    get:
      description: Возращает список всех активных периодов
      parameters:
      - description: Название периода
        format: email
        in: query
        name: searchName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список периодов
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
      summary: Получение списка периодов
      tags:
      - Период
  /period/{id_period}:
    get:
      description: Возвращает информацию о периоде по его ID
      parameters:
      - description: ID периода
        in: path
        name: id_period
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о периоде
          schema:
            $ref: '#/definitions/model.Period'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Period'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Period'
      summary: Получение периода по ID
      tags:
      - Период
  /period/{id_period}/delete:
    delete:
      description: Удаляет период по его ID
      parameters:
      - description: ID периода
        in: path
        name: id_period
        required: true
        type: integer
      - description: Имя периода
        format: email
        in: query
        name: searchName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список периодов
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
      summary: Удаление периода
      tags:
      - Период
  /period/{id_period}/fossil:
    post:
      description: Добавляет период к доставке по его ID
      parameters:
      - description: ID периода
        in: path
        name: id_period
        required: true
        type: integer
      - description: Имя периода
        format: email
        in: query
        name: searchName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список периодов
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
      summary: Добавление периода к доставке
      tags:
      - Период
  /period/{id_period}/fossil/delete:
    delete:
      description: Удаляет период из доставки по его ID
      parameters:
      - description: ID периода
        in: path
        name: id_period
        required: true
        type: integer
      - description: Имя периода
        format: email
        in: query
        name: searchName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список периодов
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
      summary: Удаление периода из доставки
      tags:
      - Период
  /period/{id_period}/image:
    post:
      consumes:
      - multipart/form-data
      description: Добавляет изображение к периоду по его ID
      parameters:
      - description: ID периода
        in: path
        name: id_period
        required: true
        type: integer
      - description: Изображение периода
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Period'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Period'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Period'
      summary: Добавление изображения к периоду
      tags:
      - Период
  /period/{id_period}/update:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о периоде по его ID
      parameters:
      - description: ID периода
        in: path
        name: id_period
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о периоде
          schema:
            $ref: '#/definitions/model.Period'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Period'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Period'
      summary: Обновление информации о периоде
      tags:
      - Период
  /period/create:
    post:
      consumes:
      - application/json
      description: Создает новый период с предоставленными данными
      parameters:
      - description: Имя периода
        format: email
        in: query
        name: searchName
        type: string
      - description: Пользовательский объект в формате JSON
        in: body
        name: period
        required: true
        schema:
          $ref: '#/definitions/model.PeriodRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Список периодов
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.PeriodGetResponse'
      summary: Создание нового периода
      tags:
      - Период
  /user/:
    get:
      description: Получение данных пользователя по его идентификатору
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить пользователя по идентификатору
  /user/login:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя и генерация JWT-токена
      parameters:
      - description: Данные для входа
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - Пользователь
  /user/logout:
    post:
      description: Выход пользователя из системы и удаление токена из куков
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Выход пользователя
      tags:
      - Пользователь
  /user/refreshtoken:
    post:
      description: Обновление пары токенов
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновление токенов
      tags:
      - Пользователь
  /user/register:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя с предоставленной информацией.
      parameters:
      - description: Пользовательский объект в формате JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Успешно зарегистрированный пользователь
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Регистрация нового пользователя.
      tags:
      - Пользователь
swagger: "2.0"
